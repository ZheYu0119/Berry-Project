## because the using the pivot_wider so some data was a list,
## I change them into sum
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$INSECTICIDE[i]))
unfood_1$INSECTICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$FUNGICIDE[i]))
unfood_1$FUNGICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$HERBICIDE[i]))
unfood_1$HERBICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$OTHER[i]))
unfood_1$OTHER[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(NITROGEN)`[i]))
unfood_1$`(NITROGEN)`[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(PHOSPHATE)`[i]))
unfood_1$`(PHOSPHATE)`[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(POTASH)`[i]))
unfood_1$`(POTASH)`[i] <- sum(f)
}
unfood_1$FUNGICIDE <- as.numeric(unfood_1$FUNGICIDE)
unfood_1$INSECTICIDE <- as.numeric(unfood_1$INSECTICIDE)
unfood_1$HERBICIDE <- as.numeric(unfood_1$HERBICIDE)
unfood_1$OTHER <- as.numeric(unfood_1$OTHER)
unfood_1$`(NITROGEN)` <- as.numeric(unfood_1$`(NITROGEN)`)
unfood_1$`(PHOSPHATE)` <- as.numeric(unfood_1$`(PHOSPHATE)`)
unfood_1$`(POTASH)` <- as.numeric(unfood_1$`(POTASH)`)
kable(head(unfood_1, n=10)) %>% kable_styling(font_size=12)
(unfood$Chemical=="FUNGICIDE"&unfood$Value>2)
unfood[unfood$Chemical=="FUNGICIDE"&unfood$Value>2]
outlier <- filter(unfood,unfood$Chemical=="FUNGICIDE"&unfood$Value>2)
View(outlier)
unfood_2 <- filter(unfood,Chemical=="(NITROGEN)"|Chemical=="(PHOSPHATE)"|Chemical=="(POTASH)")
ctype1 <- ggplot(unfood_2,mapping=aes(x=Chemical,y=Value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
labs(x = "Fertilizer")
unfood_3 <- filter(unfood,Chemical=="FUNGICIDE"|Chemical=="HERBICIDE"|Chemical=="INSECTICIDE"|Chemical=="OTHER")
ctype2 <- ggplot(unfood_3,mapping=aes(x=Chemical,y=Value))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
axis.text = element_text(size = 10),
axis.title = element_text(size = 13, face = "bold")) +
coord_cartesian(ylim = c(0,2))+
labs(x = "Agentia")
grid.arrange(ctype1,ctype2,nrow=1)
outlier <- filter(unfood,unfood$Chemical=="FUNGICIDE"&unfood$Value>2)
kable(head(outlier, n=10)) %>% kable_styling(font_size=12)
library(knitr)
library(tidyverse)
library(magrittr)
library(kableExtra)
library(gridExtra)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
unfood_1$FUNGICIDE <- as.numeric(unfood_1$FUNGICIDE)
unfood_1$INSECTICIDE <- as.numeric(unfood_1$INSECTICIDE)
unfood_1$HERBICIDE <- as.numeric(unfood_1$HERBICIDE)
unfood_1$OTHER <- as.numeric(unfood_1$OTHER)
unfood_1$`(NITROGEN)` <- as.numeric(unfood_1$`(NITROGEN)`)
unfood_1$`(PHOSPHATE)` <- as.numeric(unfood_1$`(PHOSPHATE)`)
unfood_1$`(POTASH)` <- as.numeric(unfood_1$`(POTASH)`)
df <- unfood_1[,-c(1,2)]
pca <- prcomp(df,center = T,scale. = T)
print(pca)
pca2.1 <- pca
pca2.1$rotation <- -pca2.1$rotation
pca2.1$x <- -pca2.1$x
print(pca2.1)
summary(pca2.1)
plot(pca, type="lines")
biplot(pca2.1, scale = 0)
pc12 <- data.frame(pca2.1$rotation[, 1:2])
pc12$type <- rownames(pc12)
pt1 <- ggplot(pc12, aes(x = PC1, y = PC2))
pt1 <- pt1 + geom_point(size = 3) +
geom_text(aes(label = type), vjust = 1) +
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13, face = "bold"))
print(pt1)
unfood_1$FUNGICIDE <- as.numeric(unfood_1$FUNGICIDE)
unfood_1$INSECTICIDE <- as.numeric(unfood_1$INSECTICIDE)
unfood_1$HERBICIDE <- as.numeric(unfood_1$HERBICIDE)
unfood_1$OTHER <- as.numeric(unfood_1$OTHER)
unfood_1$`(NITROGEN)` <- as.numeric(unfood_1$`(NITROGEN)`)
unfood_1$`(PHOSPHATE)` <- as.numeric(unfood_1$`(PHOSPHATE)`)
unfood_1$`(POTASH)` <- as.numeric(unfood_1$`(POTASH)`)
df <- unfood_1[,-c(1,2)]
pca <- prcomp(df,center = T,scale. = T)
print(pca)
pca2.1 <- pca
pca2.1$rotation <- -pca2.1$rotation
pca2.1$x <- -pca2.1$x
print(pca2.1)
summary(pca2.1)
plot(pca, type="lines")
unfood_1$FUNGICIDE <- as.numeric(unfood_1$FUNGICIDE)
unfood_1$INSECTICIDE <- as.numeric(unfood_1$INSECTICIDE)
unfood_1$HERBICIDE <- as.numeric(unfood_1$HERBICIDE)
unfood_1$OTHER <- as.numeric(unfood_1$OTHER)
unfood_1$`(NITROGEN)` <- as.numeric(unfood_1$`(NITROGEN)`)
unfood_1$`(PHOSPHATE)` <- as.numeric(unfood_1$`(PHOSPHATE)`)
unfood_1$`(POTASH)` <- as.numeric(unfood_1$`(POTASH)`)
df <- unfood_1[,-c(1,2)]
pca <- prcomp(df,center = T,scale. = T)
pca2.1 <- pca
pca2.1$rotation <- -pca2.1$rotation
pca2.1$x <- -pca2.1$x
summary(pca2.1)
plot(pca, type="lines")
unfood_1$FUNGICIDE <- as.numeric(unfood_1$FUNGICIDE)
unfood_1$INSECTICIDE <- as.numeric(unfood_1$INSECTICIDE)
unfood_1$HERBICIDE <- as.numeric(unfood_1$HERBICIDE)
unfood_1$OTHER <- as.numeric(unfood_1$OTHER)
unfood_1$`(NITROGEN)` <- as.numeric(unfood_1$`(NITROGEN)`)
unfood_1$`(PHOSPHATE)` <- as.numeric(unfood_1$`(PHOSPHATE)`)
unfood_1$`(POTASH)` <- as.numeric(unfood_1$`(POTASH)`)
df <- unfood_1[,-c(1,2)]
pca <- prcomp(df,center = T,scale. = T)
pca2.1 <- pca
pca2.1$rotation <- -pca2.1$rotation
pca2.1$x <- -pca2.1$x
summary(pca2.1)
plot(pca, type="lines")
set.seed(7)
pc.km <- kmeans(pc12[, 1:2], 3, nstart = 100)
# ggplot clusters
pt.km <- ggplot(pc12, aes(x = PC1, y = PC2))
pt.km <- pt.km + geom_point(aes(colour = factor(pc.km$cluster)), size = 3) +
scale_colour_manual(values = c("red", "blue", "green")) +
geom_text(aes(label = crimes), vjust = 1) +
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13, face = "bold")) +
labs(colour = "Cluster")
print(pt.km)
set.seed(7)
pc.km <- kmeans(pc12[, 1:2], 3, nstart = 100)
# ggplot clusters
pt.km <- ggplot(pc12, aes(x = PC1, y = PC2))
pt.km <- pt.km + geom_point(aes(colour = factor(pc.km$cluster)), size = 3) +
scale_colour_manual(values = c("red", "blue", "green")) +
geom_text(aes(label =type), vjust = 1) +
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13, face = "bold")) +
labs(colour = "Cluster")
print(pt.km)
pc12 <- data.frame(pca2.1$rotation[, 1:2])
pc12$type <- rownames(pc12)
pt1 <- ggplot(pc12, aes(x = PC1, y = PC2))
pt1 <- pt1 + geom_point(size = 3) +
geom_text(aes(label = type), vjust = 1) +
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13, face = "bold"))
set.seed(7)
pc.km <- kmeans(pc12[, 1:2], 3, nstart = 100)
# ggplot clusters
pt.km <- ggplot(pc12, aes(x = PC1, y = PC2))
pt.km <- pt.km + geom_point(aes(colour = factor(pc.km$cluster)), size = 3) +
scale_colour_manual(values = c("red", "blue", "green")) +
geom_text(aes(label =type), vjust = 1) +
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13, face = "bold")) +
labs(colour = "Cluster")
print(pt.km)
library(knitr)
library(tidyverse)
library(magrittr)
library(kableExtra)
library(gridExtra)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, out.width = "70%", tidy = T, fig.align = "center")
## select the data of raspberry
rberry <- ag_data %>% filter((Commodity=="RASPBERRIES") & (Period=="YEAR"))
rberry %<>% select(-c(Period, Commodity))
## use '#' to separate 'Data Item' into three parts
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"^RASPBERRIES","RASPBERRIES#")
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"MEASURED IN","#MEASURED IN")
rberry %<>% separate(`Data Item`, c("B","type", "meas"), sep = "#")
## tidy up each new column and continue to separate them
rberry %<>% separate(type, c("Type", "Production"), sep = " - ")
rberry %<>% separate(Type, c("d1", "Type"), sep = ",")
rberry %<>% separate(Production, c("Production", "d2"), sep = ",")
rberry %<>% separate(meas, c("Measures", "Avg"), sep = ", ")
## delete those columns with useless information
rberry %<>% select(-c(B,d1,d2))
rberry[is.na(rberry)] <- " "  ## OK now Data Item has been split into parts
kable(head(rberry),n=10) %>% kable_styling(full_width = F)
## onto Domain
## select the data of raspberry
rberry <- ag_data %>% filter((Commodity=="RASPBERRIES") & (Period=="YEAR"))
rberry %<>% select(-c(Period, Commodity))
## use '#' to separate 'Data Item' into three parts
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"^RASPBERRIES","RASPBERRIES#")
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"MEASURED IN","#MEASURED IN")
rberry %<>% separate(`Data Item`, c("B","type", "meas"), sep = "#")
## tidy up each new column and continue to separate them
rberry %<>% separate(type, c("Type", "Production"), sep = " - ")
rberry %<>% separate(Type, c("d1", "Type"), sep = ",")
rberry %<>% separate(Production, c("Production", "d2"), sep = ",")
rberry %<>% separate(meas, c("Measures", "Avg"), sep = ", ")
## delete those columns with useless information
rberry %<>% select(-c(B,d1,d2))
rberry[is.na(rberry)] <- " "  ## OK now Data Item has been split into parts
kable(head(rberry)) %>% kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
## onto Domain
## select the data of raspberry
rberry <- ag_data %>% filter((Commodity=="RASPBERRIES") & (Period=="YEAR"))
rberry %<>% select(-c(Period, Commodity))
## use '#' to separate 'Data Item' into three parts
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"^RASPBERRIES","RASPBERRIES#")
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"MEASURED IN","#MEASURED IN")
rberry %<>% separate(`Data Item`, c("B","type", "meas"), sep = "#")
## tidy up each new column and continue to separate them
rberry %<>% separate(type, c("Type", "Production"), sep = " - ")
rberry %<>% separate(Type, c("d1", "Type"), sep = ",")
rberry %<>% separate(Production, c("Production", "d2"), sep = ",")
rberry %<>% separate(meas, c("Measures", "Avg"), sep = ", ")
## delete those columns with useless information
rberry %<>% select(-c(B,d1,d2))
rberry[is.na(rberry)] <- " "  ## OK now Data Item has been split into parts
kable(head(rberry)) %>% kable_styling(width=50%)
## select the data of raspberry
rberry <- ag_data %>% filter((Commodity=="RASPBERRIES") & (Period=="YEAR"))
rberry %<>% select(-c(Period, Commodity))
## use '#' to separate 'Data Item' into three parts
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"^RASPBERRIES","RASPBERRIES#")
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"MEASURED IN","#MEASURED IN")
rberry %<>% separate(`Data Item`, c("B","type", "meas"), sep = "#")
## tidy up each new column and continue to separate them
rberry %<>% separate(type, c("Type", "Production"), sep = " - ")
rberry %<>% separate(Type, c("d1", "Type"), sep = ",")
rberry %<>% separate(Production, c("Production", "d2"), sep = ",")
rberry %<>% separate(meas, c("Measures", "Avg"), sep = ", ")
## delete those columns with useless information
rberry %<>% select(-c(B,d1,d2))
rberry[is.na(rberry)] <- " "  ## OK now Data Item has been split into parts
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 6)
## onto Domain
## select the data of raspberry
rberry <- ag_data %>% filter((Commodity=="RASPBERRIES") & (Period=="YEAR"))
rberry %<>% select(-c(Period, Commodity))
## use '#' to separate 'Data Item' into three parts
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"^RASPBERRIES","RASPBERRIES#")
rberry$`Data Item` <- str_replace(rberry$`Data Item`,"MEASURED IN","#MEASURED IN")
rberry %<>% separate(`Data Item`, c("B","type", "meas"), sep = "#")
## tidy up each new column and continue to separate them
rberry %<>% separate(type, c("Type", "Production"), sep = " - ")
rberry %<>% separate(Type, c("d1", "Type"), sep = ",")
rberry %<>% separate(Production, c("Production", "d2"), sep = ",")
rberry %<>% separate(meas, c("Measures", "Avg"), sep = ", ")
## delete those columns with useless information
rberry %<>% select(-c(B,d1,d2))
rberry[is.na(rberry)] <- " "  ## OK now Data Item has been split into parts
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 10)
## onto Domain
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 13)
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 11)
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 10)
##separate 'Domain' and 'Domain category'
rberry %<>% separate(Domain, c("D_left", "D_right"), sep = ", ")
rberry[is.na(rberry)] <- " "
rberry %<>% separate(`Domain Category`, c("DC_left", "DC_right"), sep = ", ")
## work on DC_left first
rberry %<>% separate(DC_left, c("DC_left_l", "DC_left_r"), sep = ": ")
## now work on DC_right
rberry %<>% separate(DC_right, c("DC_right_l", "DC_right_r"), sep = ": ")
rberry[is.na(rberry)] <- " "
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 10)
##  OK now we need to eliminate the redundancy
## fine and remove redundant columns
## remove column rberry$DC_left_l and DC_right_l
rberry %<>%  select(-DC_left_l)
rberry %<>% select(-DC_right_l)
## remove "Chemical" and joint the columns
rberry %<>% mutate(D_left = "CHEMICAL", D_left = "")
rberry %<>% mutate(Chemical=paste(D_left, D_right))
rberry %<>% select(-c(D_left, D_right))
## select columns that want to reserve
rberry %<>% select(Year, State, Type, Production, Measures,Avg, DC_left_r, DC_right_r, Chemical, Value )
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 10)
## now let's clean it up
rberry %<>% rename(Chem_family = DC_left_r, Materials = DC_right_r)
rberry %<>% mutate(Chemical = str_trim(paste(Chem_family, Chemical)))
rberry %<>% select(Year, State, Type, Production, Avg, Measures, Materials, Chemical, Value)
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 10)
##write.csv(rberry,"rberry.csv",row.names = F)
## look at chemicals being applied to food, and drop "(D)" and "(NA)"
unfood <- rberry %<>% filter(Production=="APPLICATIONS")
unfood %<>% filter(Value != "(D)")
unfood %<>% filter(Value !=  "(NA)")
unfood %<>% filter(Measures == "MEASURED IN LB / ACRE / APPLICATION")
unfood$Value <- as.numeric(unfood$Value)
## just I mentioned before I select year, state, chemical and value,
## and make the dataframe more wider
unfood_1 <- unfood %>%  select(Year, State, Chemical, Value)
unfood_1$Value <- as.numeric(unfood_1$Value)
unfood_1 %<>% pivot_wider(names_from = Chemical, values_from = Value)
## because the using the pivot_wider so some data was a list,
## I change them into sum
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$INSECTICIDE[i]))
unfood_1$INSECTICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$FUNGICIDE[i]))
unfood_1$FUNGICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$HERBICIDE[i]))
unfood_1$HERBICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$OTHER[i]))
unfood_1$OTHER[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(NITROGEN)`[i]))
unfood_1$`(NITROGEN)`[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(PHOSPHATE)`[i]))
unfood_1$`(PHOSPHATE)`[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(POTASH)`[i]))
unfood_1$`(POTASH)`[i] <- sum(f)
}
unfood_1$FUNGICIDE <- as.numeric(unfood_1$FUNGICIDE)
unfood_1$INSECTICIDE <- as.numeric(unfood_1$INSECTICIDE)
unfood_1$HERBICIDE <- as.numeric(unfood_1$HERBICIDE)
unfood_1$OTHER <- as.numeric(unfood_1$OTHER)
unfood_1$`(NITROGEN)` <- as.numeric(unfood_1$`(NITROGEN)`)
unfood_1$`(PHOSPHATE)` <- as.numeric(unfood_1$`(PHOSPHATE)`)
unfood_1$`(POTASH)` <- as.numeric(unfood_1$`(POTASH)`)
kable(head(rberry)) %>% kable_styling(fixed_thead = T, font_size = 10)
## look at chemicals being applied to food, and drop "(D)" and "(NA)"
unfood <- rberry %<>% filter(Production=="APPLICATIONS")
unfood %<>% filter(Value != "(D)")
unfood %<>% filter(Value !=  "(NA)")
unfood %<>% filter(Measures == "MEASURED IN LB / ACRE / APPLICATION")
unfood$Value <- as.numeric(unfood$Value)
## just I mentioned before I select year, state, chemical and value,
## and make the dataframe more wider
unfood_1 <- unfood %>%  select(Year, State, Chemical, Value)
unfood_1$Value <- as.numeric(unfood_1$Value)
unfood_1 %<>% pivot_wider(names_from = Chemical, values_from = Value)
## because the using the pivot_wider so some data was a list,
## I change them into sum
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$INSECTICIDE[i]))
unfood_1$INSECTICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$FUNGICIDE[i]))
unfood_1$FUNGICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$HERBICIDE[i]))
unfood_1$HERBICIDE[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$OTHER[i]))
unfood_1$OTHER[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(NITROGEN)`[i]))
unfood_1$`(NITROGEN)`[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(PHOSPHATE)`[i]))
unfood_1$`(PHOSPHATE)`[i] <- sum(f)
}
for (i in 1:6) {
f <- as.numeric(unlist(unfood_1$`(POTASH)`[i]))
unfood_1$`(POTASH)`[i] <- sum(f)
}
unfood_1$FUNGICIDE <- as.numeric(unfood_1$FUNGICIDE)
unfood_1$INSECTICIDE <- as.numeric(unfood_1$INSECTICIDE)
unfood_1$HERBICIDE <- as.numeric(unfood_1$HERBICIDE)
unfood_1$OTHER <- as.numeric(unfood_1$OTHER)
unfood_1$`(NITROGEN)` <- as.numeric(unfood_1$`(NITROGEN)`)
unfood_1$`(PHOSPHATE)` <- as.numeric(unfood_1$`(PHOSPHATE)`)
unfood_1$`(POTASH)` <- as.numeric(unfood_1$`(POTASH)`)
kable(head(rberry,n=10)) %>% kable_styling(fixed_thead = T, font_size = 10)
library(shiny)
library(knitr)
library(tidyverse)
library(magrittr)
library(kableExtra)
library(gridExtra)
ui <- fluidPage(
titlePanel("Raspberry"),
sidebarLayout(
sidebarPanel("selection"),
mainPanel("show reasults")
)
)
shinyApp(ui = ui, server = server)
server <- function(input, output){
}
shinyApp(ui = ui, server = server)
output$selectVar <- renderPlot({
args <- switch (input$Var,
"Chmeical" = pc,
"State" = pc,
"Year" = pc
)
})
runApp('shinyapp')
write.csv(unfood,"unfood.csv",row.names = F)
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
View(unfood)
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
pc <- grid.arrange(ctype1,ctype2,nrow=1)
runApp('shinyapp')
write.csv(unfood_1,"unfood_1.csv",row.names = F)
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
grid.arrange(pt.line,pt.bi,pt.km)
pt.line <- plot(pca, type="lines")
pt.bi <- biplot(pca2.1, scale = 0)
pt.km <- pt.km + geom_point(aes(colour = factor(pc.km$cluster)), size = 3) +
scale_colour_manual(values = c("red", "blue", "green")) +
geom_text(aes(label =type), vjust = 1) +
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13, face = "bold")) +
labs(colour = "Cluster")
# ggplot clusters
pt.km <- ggplot(pc12, aes(x = PC1, y = PC2))
pt.km <- pt.km + geom_point(aes(colour = factor(pc.km$cluster)), size = 3) +
scale_colour_manual(values = c("red", "blue", "green")) +
geom_text(aes(label =type), vjust = 1) +
theme(axis.text = element_text(size = 11),
axis.title = element_text(size = 13, face = "bold")) +
labs(colour = "Cluster")
pc2 <- grid.arrange(pt.line,pt.bi,pt.km)
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
list(pt.line,pt.bi,pt.km)
pt.bi <- biplot(pca2.1, scale = 0)
pt.line <- plot(pca, type="lines")
list(pt.line,pt.bi,pt.km)
pc2
pc2 <- par(mfow=c(1,3))
plot(pca, type="lines")
biplot(pca2.1, scale = 0)
pt.km
pc2 <- par(mfow=c(1,3))
pc2
plot(pca, type="lines")
biplot(pca2.1, scale = 0)
pt.km
par(pc2)
pc2 <- par(mforw=c(1,3))
pc2
plot(pca, type="lines")
biplot(pca2.1, scale = 0)
pt.km
par(pc2)
pc2 <- par(mforw=c(1,3))
pc2
pt.bi
pt.line
pt.km
pt.line <- plot(pca, type="lines")
pc2 <- par(mforw=c(1,3))
pc2
plot(pca, type="lines")
biplot(pca2.1, scale = 0)
pt.km
par(pc2)
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
runApp('shinyapp')
install.packages('rsconnect')
install.packages("rsconnect")
